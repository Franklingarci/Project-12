{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\frontend\\\\Project-12\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DisplayCounter({\n  count\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Count:\", count, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n_c = DisplayCounter;\nfunction Increment({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \"+1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Increment;\nfunction Decrement({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \" -1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Decrement;\nfunction Reset({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \" Reset\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n}\n_c4 = Reset;\nexport default function counter() {\n  _s();\n  const [value, setvalue] = useState(0);\n  function handleIncrement() {\n    setvalue(value + 1);\n  }\n  function handleDecrement() {\n    if (value > 0) {\n      setvalue(value - 1);\n    }\n  }\n  function handleReset() {\n    setvalue(0);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DisplayCounter, {\n      count: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), value === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \" Cant't go Lower than 0!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Increment, {\n      onClick: handleIncrement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Decrement, {\n      onClick: handleDecrement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      onClick: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(counter, \"8EpITqp096HIFNQjjEPCZxzmjik=\");\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DisplayCounter\");\n$RefreshReg$(_c2, \"Increment\");\n$RefreshReg$(_c3, \"Decrement\");\n$RefreshReg$(_c4, \"Reset\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplayCounter","count","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Increment","onClick","_c2","Decrement","_c3","Reset","_c4","counter","_s","value","setvalue","handleIncrement","handleDecrement","handleReset","style","color","$RefreshReg$"],"sources":["C:/Users/frank/frontend/Project-12/src/App.js"],"sourcesContent":["import {useState} from 'react';\r\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\r\n function DisplayCounter({count}){\r\n    return <h1>Count:{count} </h1>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick = {onClick}>+1</button>\r\n }\r\n function Decrement({onClick}){\r\n    return <button onClick = {onClick}> -1</button>\r\n }\r\n function Reset({onClick}){\r\n    return <button onClick={onClick}> Reset</button>\r\n }\r\n\r\n\r\n export default function counter(){\r\nconst [value, setvalue] = useState(0);\r\n\r\nfunction handleIncrement(){\r\n    setvalue(value+1)\r\n}\r\nfunction handleDecrement(){\r\n   if(value>0){\r\n     setvalue(value-1);\r\n}\r\n}\r\nfunction handleReset(){\r\n    setvalue(0)\r\n}\r\n\r\n    return(\r\n        <>\r\n        <DisplayCounter count = {value} />\r\n         {value === 0 && <p style = {{color:\"red\"}}> Cant't go Lower than 0!</p>}\r\n        <Increment  onClick={ handleIncrement}/>\r\n        <Decrement onClick={handleDecrement} />\r\n        <Reset onClick={handleReset} />\r\n        </>\r\n    );\r\n }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}