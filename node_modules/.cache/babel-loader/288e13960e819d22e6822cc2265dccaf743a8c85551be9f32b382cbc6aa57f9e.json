{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\frontend\\\\Project-12\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\n/*\r\nfunction DisplayCounter({count}){\r\n   return <h1>Count:{count} </h1>\r\n}\r\nfunction Increment({onClick}){\r\n   return <button onClick = {onClick}>+1</button>\r\n}\r\nfunction Decrement({onClick}){\r\n   return <button onClick = {onClick}> -1</button>\r\n}\r\nfunction Reset({onClick}){\r\n   return <button onClick={onClick}> Reset</button>\r\n}\r\n\n\nexport default function counter(){\r\nconst [value, setvalue] = useState(0);\r\nif(value<=0){\r\n   <p style ={{color:\"red\"}}> Can't go lower than 0!</p>\r\n}\r\nfunction handleIncrement(){\r\n   setvalue(value+1)\r\n}\r\nfunction handleDecrement(){\r\n  if(value>0){\r\n    setvalue(value-1);\r\n}\r\n}\r\nfunction handleReset(){\r\n   setvalue(0)\r\n}\r\n\n   return(\r\n       <>\r\n       <DisplayCounter count = {value} />\r\n       <Increment  onClick={ handleIncrement}/>\r\n       <Decrement onClick={handleDecrement} />\r\n       <Reset onClick={handleReset} />\r\n       </>\r\n   );\r\n}\r\n   */\n/*\r\n function EmojiDisplay({emoji, vote}){\r\n    return<h3>{emoji}:{vote}</h3>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick={onClick}> +1</button>\r\n }\r\n export default function Emjoi(){\r\n   const [emojiList, setEmojilist] = useState([\r\n    {emoji: 'ðŸ˜‚', votes:0},\r\n    {emoji:'ðŸ¤–', votes:0},\r\n    {emoji: 'ðŸ˜Ž', votes:0},\r\n   ]);\r\n   function handleIncrement(index){\r\n        const copy = emojiList.slice();\r\n       copy[index].votes+=1;\r\n       setEmojilist(copy);\r\n   }\r\n\r\n   return(\r\n    <div>\r\n    <h2> Emoji Voter Board</h2>\r\n    {emojiList.map((emojiLists, index) => (\r\n        <>\r\n        <EmojiDisplay\r\n             key={index}\r\n          emoji={emojiLists.emoji}\r\n          vote={emojiLists.votes}\r\n        />\r\n        <Increment onClick={() => handleIncrement(index)}/>\r\n        </>\r\n    ))}\r\n    </div>\r\n   );\r\n }\r\n   */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Display() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Vote for Your Favorite Pizza Topping!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 12\n  }, this);\n}\n_c = Display;\nfunction DisplayVotes({\n  name,\n  votes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", name, \": \", votes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, this);\n}\n_c2 = DisplayVotes;\nfunction Increment({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \"+1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Increment;\nfunction ResetAll({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \" Reset All \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 8\n  }, this);\n}\n_c4 = ResetAll;\nexport default function ToppingBoard() {\n  _s();\n  const [toppingList, setTopping] = useState([{\n    name: \"Peperoni\",\n    votes: 0\n  }, {\n    name: \"Green Peppers\",\n    votes: 0\n  }, {\n    name: \"Pineapple\",\n    votes: 0\n  }]);\n  function handleVote(index) {\n    const newArray = toppingList.slice();\n    newArray[index].votes += 1;\n    setTopping(newArray);\n  }\n  function reset() {\n    const newArray = toppingList.slice();\n    {\n      newArray.map(topping);\n    }\n    setTopping(newArray);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), toppingList.map((topping, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DisplayVotes, {\n        name: topping.name,\n        votes: topping.votes\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Increment, {\n        onClick: () => handleVote(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)), /*#__PURE__*/_jsxDEV(ResetAll, {\n      onClick: () => reset()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n_s(ToppingBoard, \"zfcCHLfFK08+NpBTDyLOfu8dnRU=\");\n_c5 = ToppingBoard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"DisplayVotes\");\n$RefreshReg$(_c3, \"Increment\");\n$RefreshReg$(_c4, \"ResetAll\");\n$RefreshReg$(_c5, \"ToppingBoard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Display","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DisplayVotes","name","votes","_c2","Increment","onClick","_c3","ResetAll","_c4","ToppingBoard","_s","toppingList","setTopping","handleVote","index","newArray","slice","reset","map","topping","_c5","$RefreshReg$"],"sources":["C:/Users/frank/frontend/Project-12/src/App.js"],"sourcesContent":["import {useState} from 'react';\r\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\r\n /*\r\n function DisplayCounter({count}){\r\n    return <h1>Count:{count} </h1>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick = {onClick}>+1</button>\r\n }\r\n function Decrement({onClick}){\r\n    return <button onClick = {onClick}> -1</button>\r\n }\r\n function Reset({onClick}){\r\n    return <button onClick={onClick}> Reset</button>\r\n }\r\n\r\n\r\n export default function counter(){\r\nconst [value, setvalue] = useState(0);\r\nif(value<=0){\r\n    <p style ={{color:\"red\"}}> Can't go lower than 0!</p>\r\n}\r\nfunction handleIncrement(){\r\n    setvalue(value+1)\r\n}\r\nfunction handleDecrement(){\r\n   if(value>0){\r\n     setvalue(value-1);\r\n}\r\n}\r\nfunction handleReset(){\r\n    setvalue(0)\r\n}\r\n\r\n    return(\r\n        <>\r\n        <DisplayCounter count = {value} />\r\n        <Increment  onClick={ handleIncrement}/>\r\n        <Decrement onClick={handleDecrement} />\r\n        <Reset onClick={handleReset} />\r\n        </>\r\n    );\r\n }\r\n    */\r\n/*\r\n function EmojiDisplay({emoji, vote}){\r\n    return<h3>{emoji}:{vote}</h3>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick={onClick}> +1</button>\r\n }\r\n export default function Emjoi(){\r\n   const [emojiList, setEmojilist] = useState([\r\n    {emoji: 'ðŸ˜‚', votes:0},\r\n    {emoji:'ðŸ¤–', votes:0},\r\n    {emoji: 'ðŸ˜Ž', votes:0},\r\n   ]);\r\n   function handleIncrement(index){\r\n        const copy = emojiList.slice();\r\n       copy[index].votes+=1;\r\n       setEmojilist(copy);\r\n   }\r\n\r\n   return(\r\n    <div>\r\n    <h2> Emoji Voter Board</h2>\r\n    {emojiList.map((emojiLists, index) => (\r\n        <>\r\n        <EmojiDisplay\r\n             key={index}\r\n          emoji={emojiLists.emoji}\r\n          vote={emojiLists.votes}\r\n        />\r\n        <Increment onClick={() => handleIncrement(index)}/>\r\n        </>\r\n    ))}\r\n    </div>\r\n   );\r\n }\r\n   */\r\n\r\n function Display(){\r\n    return <h1> Vote for Your Favorite Pizza Topping!</h1>\r\n }\r\n function DisplayVotes({name, votes}){\r\n    return <p> {name}: {votes}</p>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick = {onClick}>+1</button>\r\n }\r\n function ResetAll({onClick}){\r\nreturn <button onClick={onClick}> Reset All </button>\r\n }\r\nexport default function ToppingBoard(){\r\n    const [toppingList, setTopping] = useState([\r\n        {name:\"Peperoni\", votes:0},\r\n        {name:\"Green Peppers\", votes:0},\r\n        {name:\"Pineapple\", votes:0}\r\n    ])\r\nfunction handleVote(index){\r\n    const newArray = toppingList.slice();\r\n    newArray[index].votes+=1;\r\n    setTopping(newArray);\r\n}\r\nfunction reset(){\r\n    const newArray = toppingList.slice();\r\n        {newArray.map((topping))}\r\n    setTopping(newArray);\r\n}\r\n    return(\r\n        <div>\r\n            <Display/>\r\n        {toppingList.map(( topping,index) => (\r\n        <>\r\n        <DisplayVotes\r\n        key = {index}\r\n        name = {topping.name}\r\n        votes = {topping.votes}\r\n        />\r\n\r\n        <Increment onClick={() => handleVote(index)} />\r\n        </>\r\n    ))}\r\n    <ResetAll onClick={() => reset()}/>\r\n       \r\n      </div> \r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAqCC,SAASC,OAAOA,CAAA,EAAE;EACf,oBAAOH,OAAA;IAAAI,QAAA,EAAI;EAAsC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACzD;AAACC,EAAA,GAFQN,OAAO;AAGhB,SAASO,YAAYA,CAAC;EAACC,IAAI;EAAEC;AAAK,CAAC,EAAC;EACjC,oBAAOZ,OAAA;IAAAI,QAAA,GAAG,GAAC,EAACO,IAAI,EAAC,IAAE,EAACC,KAAK;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACjC;AAACK,GAAA,GAFQH,YAAY;AAGrB,SAASI,SAASA,CAAC;EAACC;AAAO,CAAC,EAAC;EAC1B,oBAAOf,OAAA;IAAQe,OAAO,EAAIA,OAAQ;IAAAX,QAAA,EAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACjD;AAACQ,GAAA,GAFQF,SAAS;AAGlB,SAASG,QAAQA,CAAC;EAACF;AAAO,CAAC,EAAC;EAC7B,oBAAOf,OAAA;IAAQe,OAAO,EAAEA,OAAQ;IAAAX,QAAA,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACpD;AAACU,GAAA,GAFQD,QAAQ;AAGlB,eAAe,SAASE,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,CACvC;IAACa,IAAI,EAAC,UAAU;IAAEC,KAAK,EAAC;EAAC,CAAC,EAC1B;IAACD,IAAI,EAAC,eAAe;IAAEC,KAAK,EAAC;EAAC,CAAC,EAC/B;IAACD,IAAI,EAAC,WAAW;IAAEC,KAAK,EAAC;EAAC,CAAC,CAC9B,CAAC;EACN,SAASW,UAAUA,CAACC,KAAK,EAAC;IACtB,MAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,CAAC,CAAC;IACpCD,QAAQ,CAACD,KAAK,CAAC,CAACZ,KAAK,IAAE,CAAC;IACxBU,UAAU,CAACG,QAAQ,CAAC;EACxB;EACA,SAASE,KAAKA,CAAA,EAAE;IACZ,MAAMF,QAAQ,GAAGJ,WAAW,CAACK,KAAK,CAAC,CAAC;IAChC;MAACD,QAAQ,CAACG,GAAG,CAAEC,OAAQ,CAAC;IAAA;IAC5BP,UAAU,CAACG,QAAQ,CAAC;EACxB;EACI,oBACIzB,OAAA;IAAAI,QAAA,gBACIJ,OAAA,CAACG,OAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACba,WAAW,CAACO,GAAG,CAAC,CAAEC,OAAO,EAACL,KAAK,kBAChCxB,OAAA,CAAAE,SAAA;MAAAE,QAAA,gBACAJ,OAAA,CAACU,YAAY;QAEbC,IAAI,EAAIkB,OAAO,CAAClB,IAAK;QACrBC,KAAK,EAAIiB,OAAO,CAACjB;MAAM,GAFhBY,KAAK;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CAAC,eAEFR,OAAA,CAACc,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMQ,UAAU,CAACC,KAAK;MAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC7C,CACL,CAAC,eACFR,OAAA,CAACiB,QAAQ;MAACF,OAAO,EAAEA,CAAA,KAAMY,KAAK,CAAC;IAAE;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5B,CAAC;AAEZ;AAACY,EAAA,CAlCuBD,YAAY;AAAAW,GAAA,GAAZX,YAAY;AAAA,IAAAV,EAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}