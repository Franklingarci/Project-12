{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\frontend\\\\Project-12\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\n/*\r\nfunction DisplayCounter({count}){\r\n   return <h1>Count:{count} </h1>\r\n}\r\nfunction Increment({onClick}){\r\n   return <button onClick = {onClick}>+1</button>\r\n}\r\nfunction Decrement({onClick}){\r\n   return <button onClick = {onClick}> -1</button>\r\n}\r\nfunction Reset({onClick}){\r\n   return <button onClick={onClick}> Reset</button>\r\n}\r\n\n\nexport default function counter(){\r\nconst [value, setvalue] = useState(0);\r\nif(value<=0){\r\n   <p style ={{color:\"red\"}}> Can't go lower than 0!</p>\r\n}\r\nfunction handleIncrement(){\r\n   setvalue(value+1)\r\n}\r\nfunction handleDecrement(){\r\n  if(value>0){\r\n    setvalue(value-1);\r\n}\r\n}\r\nfunction handleReset(){\r\n   setvalue(0)\r\n}\r\n\n   return(\r\n       <>\r\n       <DisplayCounter count = {value} />\r\n       <Increment  onClick={ handleIncrement}/>\r\n       <Decrement onClick={handleDecrement} />\r\n       <Reset onClick={handleReset} />\r\n       </>\r\n   );\r\n}\r\n   */\n/*\r\n function EmojiDisplay({emoji, vote}){\r\n    return<h3>{emoji}:{vote}</h3>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick={onClick}> +1</button>\r\n }\r\n export default function Emjoi(){\r\n   const [emojiList, setEmojilist] = useState([\r\n    {emoji: 'ðŸ˜‚', votes:0},\r\n    {emoji:'ðŸ¤–', votes:0},\r\n    {emoji: 'ðŸ˜Ž', votes:0},\r\n   ]);\r\n   function handleIncrement(index){\r\n        const copy = emojiList.slice();\r\n       copy[index].votes+=1;\r\n       setEmojilist(copy);\r\n   }\r\n\r\n   return(\r\n    <div>\r\n    <h2> Emoji Voter Board</h2>\r\n    {emojiList.map((emojiLists, index) => (\r\n        <>\r\n        <EmojiDisplay\r\n             key={index}\r\n          emoji={emojiLists.emoji}\r\n          vote={emojiLists.votes}\r\n        />\r\n        <Increment onClick={() => handleIncrement(index)}/>\r\n        </>\r\n    ))}\r\n    </div>\r\n   );\r\n }\r\n   */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Display() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Vote for Your Favorite Pizza Topping!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 12\n  }, this);\n}\n_c = Display;\nexport default function ToppingBoard() {\n  _s();\n  const [topping, setTopping] = useState([{\n    name: \"peperoni\",\n    votes: 0\n  }, {\n    name: \"green peppers\",\n    votes: 0\n  }, {\n    name: \"Pineapple\",\n    votes: 0\n  }]);\n  return /*#__PURE__*/_jsxDEV(Display, {\n    style: color = \"red\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 7\n  }, this);\n}\n_s(ToppingBoard, \"wRfCbKDWTpEn9VVncd/fFlFNYOw=\");\n_c2 = ToppingBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"ToppingBoard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Display","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToppingBoard","_s","topping","setTopping","name","votes","style","color","_c2","$RefreshReg$"],"sources":["C:/Users/frank/frontend/Project-12/src/App.js"],"sourcesContent":["import {useState} from 'react';\r\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\r\n /*\r\n function DisplayCounter({count}){\r\n    return <h1>Count:{count} </h1>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick = {onClick}>+1</button>\r\n }\r\n function Decrement({onClick}){\r\n    return <button onClick = {onClick}> -1</button>\r\n }\r\n function Reset({onClick}){\r\n    return <button onClick={onClick}> Reset</button>\r\n }\r\n\r\n\r\n export default function counter(){\r\nconst [value, setvalue] = useState(0);\r\nif(value<=0){\r\n    <p style ={{color:\"red\"}}> Can't go lower than 0!</p>\r\n}\r\nfunction handleIncrement(){\r\n    setvalue(value+1)\r\n}\r\nfunction handleDecrement(){\r\n   if(value>0){\r\n     setvalue(value-1);\r\n}\r\n}\r\nfunction handleReset(){\r\n    setvalue(0)\r\n}\r\n\r\n    return(\r\n        <>\r\n        <DisplayCounter count = {value} />\r\n        <Increment  onClick={ handleIncrement}/>\r\n        <Decrement onClick={handleDecrement} />\r\n        <Reset onClick={handleReset} />\r\n        </>\r\n    );\r\n }\r\n    */\r\n/*\r\n function EmojiDisplay({emoji, vote}){\r\n    return<h3>{emoji}:{vote}</h3>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick={onClick}> +1</button>\r\n }\r\n export default function Emjoi(){\r\n   const [emojiList, setEmojilist] = useState([\r\n    {emoji: 'ðŸ˜‚', votes:0},\r\n    {emoji:'ðŸ¤–', votes:0},\r\n    {emoji: 'ðŸ˜Ž', votes:0},\r\n   ]);\r\n   function handleIncrement(index){\r\n        const copy = emojiList.slice();\r\n       copy[index].votes+=1;\r\n       setEmojilist(copy);\r\n   }\r\n\r\n   return(\r\n    <div>\r\n    <h2> Emoji Voter Board</h2>\r\n    {emojiList.map((emojiLists, index) => (\r\n        <>\r\n        <EmojiDisplay\r\n             key={index}\r\n          emoji={emojiLists.emoji}\r\n          vote={emojiLists.votes}\r\n        />\r\n        <Increment onClick={() => handleIncrement(index)}/>\r\n        </>\r\n    ))}\r\n    </div>\r\n   );\r\n }\r\n   */\r\n\r\n function Display(){\r\n    return <h1> Vote for Your Favorite Pizza Topping!</h1>\r\n }\r\nexport default function ToppingBoard(){\r\n    const [topping, setTopping] = useState([\r\n        {name:\"peperoni\", votes:0},\r\n        {name:\"green peppers\", votes:0},\r\n        {name:\"Pineapple\", votes:0}\r\n    ])\r\n\r\n    return(\r\n      <Display style= {color = \"red\"}/>  \r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA,SAAAC,MAAA,IAAAC,OAAA;AAqCC,SAASC,OAAOA,CAAA,EAAE;EACf,oBAAOD,OAAA;IAAAE,QAAA,EAAI;EAAsC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACzD;AAACC,EAAA,GAFQN,OAAO;AAGjB,eAAe,SAASO,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CACnC;IAACc,IAAI,EAAC,UAAU;IAAEC,KAAK,EAAC;EAAC,CAAC,EAC1B;IAACD,IAAI,EAAC,eAAe;IAAEC,KAAK,EAAC;EAAC,CAAC,EAC/B;IAACD,IAAI,EAAC,WAAW;IAAEC,KAAK,EAAC;EAAC,CAAC,CAC9B,CAAC;EAEF,oBACEb,OAAA,CAACC,OAAO;IAACa,KAAK,EAAGC,KAAK,GAAG;EAAM;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEvC;AAACG,EAAA,CAVuBD,YAAY;AAAAQ,GAAA,GAAZR,YAAY;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}