{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\frontend\\\\Project-12\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DisplayCounter({\n  count\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\":\", value, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n_c = DisplayCounter;\nfunction Increment({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \"+1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Increment;\nexport default function counter() {\n  _s();\n  const [value, setvalue] = useState(0);\n  function handleIncrement() {\n    setvalue(value + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DisplayCounter, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Increment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(counter, \"8EpITqp096HIFNQjjEPCZxzmjik=\");\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplayCounter\");\n$RefreshReg$(_c2, \"Increment\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplayCounter","count","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Increment","onClick","_c2","counter","_s","setvalue","handleIncrement","$RefreshReg$"],"sources":["C:/Users/frank/frontend/Project-12/src/App.js"],"sourcesContent":["import {useState} from 'react';\r\n/*function Reset({click}){\r\n    return <button className = \"reset\" onClick={click} > Reset</button>\r\n}\r\nfunction Square({value, onSquareClick}){\r\n\r\n    return <button className =\"square\" onClick = {onSquareClick} >{value}</button>\r\n}\r\nexport default function Board() {\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n      function handleClick(i){\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if(xIsNext){\r\n            nextSquares[i] = \"X\";\r\n        }else{\r\n            nextSquares[i] = \"O\"\r\n        }\r\n        setSquares(nextSquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    function rset(){\r\n        setSquares(Array(9).fill(null));\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[0]} onSquareClick ={() => handleClick(0)}/>\r\n        <Square value = {squares[1]} onSquareClick ={() => handleClick(1)}/>\r\n         <Square value = {squares[2]} onSquareClick ={() => handleClick(2)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[3]} onSquareClick = {() => handleClick(3)} />\r\n        <Square value = {squares[4]} onSquareClick = {() => handleClick(4)}/>\r\n        <Square value = {squares[5]} onSquareClick = {() => handleClick(5)}/>\r\n    </div>\r\n    <div className = \"board-row\">\r\n        <Square value = {squares[6]} onSquareClick = {() => handleClick(6)} />\r\n        <Square value = {squares[7]} onSquareClick = {() => handleClick(7)}/>\r\n        <Square value = {squares[8]} onSquareClick = {() => handleClick(8)}/>\r\n    </div>\r\n\r\n    <Reset click ={rset} />\r\n    </>\r\n  );\r\n}\r\n  */\r\n function DisplayCounter({count}){\r\n    return <h1>:{value} </h1>\r\n }\r\n function Increment({onClick}){\r\n    return <button onClick = {onClick}>+1</button>\r\n }\r\n export default function counter(){\r\nconst [value, setvalue] = useState(0);\r\nfunction handleIncrement(){\r\n    setvalue(value+1)\r\n}\r\n    return(\r\n        <>\r\n        <DisplayCounter value = {value} />\r\n        <Increment />\r\n        </>\r\n    );\r\n }\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAkDC,SAASC,cAAcA,CAAC;EAACC;AAAK,CAAC,EAAC;EAC7B,oBAAOJ,OAAA;IAAAK,QAAA,GAAI,GAAC,EAACC,KAAK,EAAC,GAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC5B;AAACC,EAAA,GAFQR,cAAc;AAGvB,SAASS,SAASA,CAAC;EAACC;AAAO,CAAC,EAAC;EAC1B,oBAAOb,OAAA;IAAQa,OAAO,EAAIA,OAAQ;IAAAR,QAAA,EAAC;EAAE;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACjD;AAACI,GAAA,GAFQF,SAAS;AAGlB,eAAe,SAASG,OAAOA,CAAA,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACrC,SAASoB,eAAeA,CAAA,EAAE;IACtBD,QAAQ,CAACX,KAAK,GAAC,CAAC,CAAC;EACrB;EACI,oBACIN,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACAL,OAAA,CAACG,cAAc;MAACG,KAAK,EAAIA;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCV,OAAA,CAACY,SAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACX,CAAC;AAEV;AAACM,EAAA,CAXuBD,OAAO;AAAA,IAAAJ,EAAA,EAAAG,GAAA;AAAAK,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}